# Librerie necessarie
library(ecospat)
library(raster)
library(terra)
library(sp)
library(viridis)
library(sf)
library(dplyr)

# Imposta la directory di lavoro
setwd("C:/tesi")

# Carica il shapefile della Sicilia
aoi_sicilia <- st_read("sicilia.shp") %>% .$geometry

# Variabili bioclimatiche dal WorldClim
tmin <- worldclim_country("Ita", "tmin", path = tempdir(), res = 0.5, version = "2.1")
tmax <- worldclim_country("Ita", "tmax", path = tempdir(), res = 0.5, version = "2.1")
prec <- worldclim_country("Ita", "prec", path = tempdir(), res = 0.5, version = "2.1")

# Seleziona il primo mese
tmin <- tmin$ITA_wc2.1_30s_tmin_1
tmax <- tmax$ITA_wc2.1_30s_tmax_1
prec <- prec$ITA_wc2.1_30s_prec_1

# Crea uno stack raster
r_list <- c(tmin, tmax, prec)
mydata <- raster::stack(r_list)

# Crop e mask per l'area della Sicilia
aoi_sp <- sf::as_Spatial(aoi_sicilia)
mydata_sicilia <- mydata %>% crop(., aoi_sp) %>% mask(., aoi_sp)

# Rinomina i layer nel raster stack
names(mydata_sicilia) <- c("Temperature Minimum", "Temperature Maximum", "Precipitation")

# Per ogni specie (esempio da 1 a 5)
for (species_id in 1:5) {
  
  # Costruzione del nome del file per la specie
  species_file <- paste0("species_", species_id, "_sp_prevalence_0.2_sample_prev_0.9_n_occ_900.csv")
  data_specie <- read.csv(species_file)
  
  # Dividi le occorrenze biased e unbiased
  data_biased <- subset(data_specie, distance == 0)
  data_unbiased <- subset(data_specie, distance > 0)

  # Conversione in oggetti spaziali
  coordinates(data_biased) <- c("X", "Y")
  proj4string(data_biased) <- CRS("+proj=longlat +datum=WGS84")

  coordinates(data_unbiased) <- c("X", "Y")
  proj4string(data_unbiased) <- CRS("+proj=longlat +datum=WGS84")
  
  # Estrai valori climatici per le occorrenze
  biased_env <- raster::extract(mydata_sicilia, data_biased)
  unbiased_env <- raster::extract(mydata_sicilia, data_unbiased)
  
  # Rimuovi valori NA
  biased_env <- biased_env[complete.cases(biased_env), ]
  unbiased_env <- unbiased_env[complete.cases(unbiased_env), ]
  
  # PCA per il confronto tra biased e unbiased
  all_env <- rbind(biased_env, unbiased_env)
  pca_clim <- dudi.pca(as.data.frame(all_env), center = TRUE, scale = TRUE, scannf = FALSE, nf = 2)
  
  global_scores <- pca_clim$li
  biased_scores <- suprow(pca_clim, biased_env)$li
  unbiased_scores <- suprow(pca_clim, unbiased_env)$li
  
  # Crea griglie climatiche dinamiche per biased e unbiased
  biased_grid <- ecospat.grid.clim.dyn(global_scores, biased_scores, biased_scores)
  unbiased_grid <- ecospat.grid.clim.dyn(global_scores, unbiased_scores, unbiased_scores)
  
  # Calcola l'indice dinamico per il confronto tra biased e unbiased
  dynamic_index_biased_unbiased <- ecospat.niche.dyn.index(biased_grid, unbiased_grid, intersection = 0.1)$dynamic.index.w
  
  # Visualizza i risultati
  cat("Dynamic index for species", species_id, ":", dynamic_index_biased_unbiased, "\n")
  
  # Plot delle nicchie dinamiche per la specie corrente
  ecospat.plot.niche.dyn(biased_grid, unbiased_grid, quant = 0.1, interest = 2, 
                         title = paste("Niche Overlap for Species", species_id), 
                         name.axis1 = "PC1", name.axis2 = "PC2")
  
  # Aggiungi eventuali altri calcoli, grafici o salvataggi
  # Salva i risultati se necessario
  write.csv(dynamic_index_biased_unbiased, file = paste0("species_", species_id, "_dynamic_index.csv"))
  
}
 
